import numpy as np

configfile: "config.yaml"


rule netzbooster:
    input:
        network = config["network"],
        variable= "data/variables.csv"
    output:
        network= "networks/new/postnetwork_sclopf_{flex_cost}_{tatl_factor}_sn20.nc",
        P= "results/new/P_netzbooster_sclopf_{flex_cost}_{tatl_factor}.csv",
        pos= "results/new/p_pos_sclopf_{flex_cost}_{tatl_factor}.csv",
        neg= "results/new/p_neg_sclopf_{flex_cost}_{tatl_factor}.csv"
    threads: 4
    resources: mem=10000
    script: "scripts/netzbooster_sim_tatl.py"

def flex_plus():
    cf = config["flex_cost"]
    return np.round(np.arange(cf["start"], cf["stop"] + cf["step"], cf["step"]),2)

def tatl_plus():
    cf = config["tatl_factor"]
    return np.round(np.arange(cf["start"], cf["stop"] + cf["step"], cf["step"]),2)


rule all:
    input:
      booster_P       = expand("results/new/P_netzbooster_sclopf_{flex_cost}_{tatl_factor}.csv", flex_cost=flex_plus(), tatl_factor=tatl_plus()),
      booster_pos     = expand("results/new/p_pos_sclopf_{flex_cost}_{tatl_factor}.csv", flex_cost=flex_plus(), tatl_factor=tatl_plus()),
      booster_neg     = expand("results/new/p_neg_sclopf_{flex_cost}_{tatl_factor}.csv", flex_cost=flex_plus(), tatl_factor=tatl_plus()),
      booster_network = expand("networks/new/postnetwork_sclopf_{flex_cost}_{tatl_factor}_sn20.nc", flex_cost=flex_plus(), tatl_factor=tatl_plus())
